{"version":3,"file":"static/js/707.3984373b.chunk.js","mappings":"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","sources":["components/management/user-managment/add-form/AddOEM.tsx","components/management/user-managment/add-form/AddClient.tsx","components/management/user-managment/UserManagement.tsx","hooks/useToasterAlert.tsx"],"sourcesContent":["import { AccountCircle, Block, Search } from '@mui/icons-material'\nimport { Autocomplete, Box, Button, Divider, FormControl, FormHelperText, IconButton, InputAdornment, InputBase, MenuItem, Paper, Select, TextField } from '@mui/material'\nimport React, { useEffect } from 'react'\nimport SearchIcon from '@mui/icons-material/Search';\nimport InputLabel from '@mui/material/InputLabel';\nimport axiosInstance from '../../../../config/axios.config';\nimport { environment } from '../../../../environments/environment';\nimport \"../UserManagement.css\";\nimport { useSnackAlert } from '../../../../hooks/useToasterAlert';\nimport { handleError } from '../../../utils/CommonFn';\nimport validator from 'validator';\n\nconst AddForm = ({ costcenters, roles, entity, UaddOem, getAppUsers }: any) => {\n\n    const [AadUsersdata, setAadUsersdata] = React.useState<any>([])\n    const [value, setValue] = React.useState<string | null>(\"\");\n    const [inputValue, setInputValue] = React.useState('');\n    const [disName, setDisName] = React.useState('')\n    const [aMobile, setaMobile] = React.useState(\"\")\n    const [aCost, setaCost] = React.useState(\"\")\n    const [aRole, setaRole] = React.useState(\"\")\n    const [oem, setOEM] = React.useState(true)\n    const snackBar = useSnackAlert()\n    const [eMobileError, setEMobileError] = React.useState<any>(false)\n    const [eMobileDesc, setEMobileDesc] = React.useState(\"\")\n    const [eRoleError, setERoleError] = React.useState<any>(false)\n    const [eRoleDesc, setERoleDesc] = React.useState(\"\")\n    const [eCostError, setECostError] = React.useState<any>(false)\n    const [eCostDesc, setECostDesc] = React.useState(\"\")\n    const [loadState, setLoadState] = React.useState<any>(false)\n    const [activeSave, setActiveSave] = React.useState<any>(true)\n\n\n\n    const AADUsers = (val: any) => {\n        if (val.length > 1) {\n            setLoadState(true)\n            const searchdata = { 'search': val }\n            axiosInstance\n                .post(`${environment.baseApiURL}appuser/search`, searchdata)\n                .then((result:any) => {\n                    if (result.data.code === 200) {\n                        setAadUsersdata(result.data[0])\n                        setLoadState(false)\n                    }\n                    else if (result.data.code === 204) {\n                        snackBar(\"warning\", result.data.message)\n                    }\n                }\n                )\n                .catch((err:any) => {\n                    handleError(err)\n                })\n        }\n    }\n\n    const AADUsersData = AadUsersdata.map((user: any) => { return { value: user.id, label: user.userPrincipalName } })\n\n    const costCenterName = costcenters.map((cost: any) => { return { value: cost.CostCenterID, label: cost.CostCenterName } })\n    const Roles = roles.filter((role: any) => { return (role.RoleName.toLowerCase().includes('oem')) })\n    const OemRoles = Roles.map((r: any) => { return { value: r.RoleID, label: r.RoleName } })\n\n\n    const GetUserName = (usr: any) => {\n        setDisName('')\n        AadUsersdata.filter((name: any) => {\n            if (name.id === usr.value) {\n                setDisName(name.displayName)\n            }\n        })\n    }\n\n    const PostOemUser = (e: any) => {\n        e.preventDefault()\n        const postData = {\n            \"UserPrincipleName\": AADUsersData[0].label,\n            \"FullName\": disName,\n            \"UserEntity\": entity,\n            'RoleID': aRole,\n            'CostCenterID': aCost,\n            'Mobile': aMobile\n            \n        }\n        axiosInstance.post(`${environment.baseApiURL}appuser`, postData)\n            .then(\n                (result:any) => {\n                    if (result.data.code === 200) {\n                        snackBar(\"success\", result.data.message)\n                        return result.data\n                    }\n                    else if (result.data.code === 204) {\n                        snackBar(\"warning\", result.data.message)\n                    }\n                }\n            )\n            .catch(\n                (err:any) => { handleError(err) }\n            )\n        UaddOem(true)\n        setOEM(false)\n        getAppUsers()\n\n    }\n\n    const handeOemClose = () => {\n        setOEM(false)\n        UaddOem(false)\n       \n    }\n\n    const HandleEMobile = (a: string) => {\n        if (!validator.isLength(a, { min: 10, max: 13 }) || !validator.isMobilePhone(a)) {\n            setEMobileError(true)\n            setEMobileDesc(\"Please Enter the valid Mobile Number\")\n        }\n        else {\n            setEMobileError(false)\n            setEMobileDesc(\"\")\n        }\n    }\n\n\n\n    const handleERoll = (r: any) => {\n\n        if (r > 0) {\n            setaRole(r)\n            setERoleError(false)\n            setERoleDesc(\"\")\n        }\n    }\n\n    const handleECost = (r: any) => {\n\n        if (r > 0) {\n            setaCost(r)\n            setECostError(false)\n            setECostDesc(\"\")\n        }\n    }\n\n    const handleSave=()=>{\n        if(((eCostError || eRoleError || eMobileError)===true) || (value==\"\" || disName==\"\" || aCost==\"\" || aRole==\"\" || aMobile==\"\")){\n            setActiveSave(true)\n        }\n        else{\n            setActiveSave(false)\n        }\n    }\n   useEffect(()=>{ \n     handleSave()\n   },[value,aCost,aRole,aMobile])\n\n    const addOEM =\n        <div style={{ width: \"95%\", margin: '30px auto' }}>\n            <Paper elevation={3} sx={{ width: \"100%\", alignContent: \"center\", margin: '20px auto' }}>\n                <Box\n                    component=\"form\"\n                    sx={{\n                        '& .MuiTextField-root': { m: 1, width: '25ch' },\n                    }}\n                    noValidate\n                    autoComplete=\"off\"\n                >\n                    <div>\n                        <div style={{ padding: '2px 4px', display: 'flex',justifyContent:'center', width: 'auto', margin: '20px auto' }}>\n                            <Paper\n                                component=\"form\"\n                                sx={{ p: '2px 4px', display: 'flex',  width: 'auto', height: 'auto' }}\n                            >\n                                <div style={{ display: 'flex', justifyContent: 'space-evenly' }}>\n                                    <IconButton sx={{ p: '10px', margin: '20px auto' }} aria-label=\"menu\">\n                                        <AccountCircle />\n                                    </IconButton>\n                                    <div style={{ width: '80%' }}>\n                                        <Autocomplete\n                                            defaultValue=\"\"\n                                            value={value}\n\n                                            loading={loadState}\n                                            onChange={( newValue:any) => {\n                                                setValue(newValue); GetUserName(newValue);handleSave()\n                                            }}\n                                            inputValue={inputValue}\n                                            onInputChange={( newInputValue:any) => {\n                                                setInputValue(newInputValue); AADUsers(newInputValue)\n                                            }}\n                                            autoComplete\n                                            includeInputInList\n                                            options={AADUsersData}\n                                            isOptionEqualToValue={(option:any, value:any) => option.valueOf === value.valueOf}\n                                            renderInput={(params:any) => <TextField required\n                                                {...params} label=\"Search User\" variant='standard' id=\"standard-search\" />}\n                                        />\n                                    </div>\n\n                                    <IconButton type=\"button\" sx={{ p: '10px' }} aria-label=\"search\">\n                                        <SearchIcon />\n                                    </IconButton>\n                                    {/* <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" /> */}\n                                </div>\n\n                            </Paper>\n                        </div>\n                        <br></br>\n                        <br></br>\n                        <div style={{ display: 'block',  fontSize: '18px' }}>\n                            <div style={{ display: 'flex', justifyContent: 'space-evenly', flexWrap: \"wrap\" }}>\n                                <div style={{ display: 'flex' }}>\n                                    <InputLabel sx={{ fontSize: '18px', mt: '15px' }}>Full Name:&nbsp; </InputLabel>\n\n                                    <TextField\n                                        required\n                                        value={disName}\n                                        id=\"outlined-required\"\n                                        label=\"Name\"\n                                        helperText=\"Enter the Full Name\"\n                                        size=\"small\"\n                                        onChange={handleSave}\n                                    />\n\n                                </div>\n                                <div style={{ display: 'flex' }}>\n                                    <InputLabel sx={{ fontSize: '18px', mt: '15px' }}>Mobile Number:&nbsp; </InputLabel>\n                                    <TextField\n                                        id=\"outlined-req\"\n                                        label=\"Phone\"\n                                        // helperText=\"Enter the Mobile Number\"\n                                        defaultValue=\"\"\n                                        size=\"small\"\n                                        onChange={(mob:any) => { HandleEMobile(mob.target.value);handleSave(); setaMobile(mob.target.value) }}\n                                        error={eMobileError}\n                                        helperText={eMobileDesc}\n                                    />\n                                </div>\n                            </div>\n                            <br></br>\n                            <br></br>\n                            <div style={{ display: 'flex', justifyContent: 'space-evenly', flexWrap: \"wrap\"  }}>\n                                <div style={{ marginBottom: 40, marginLeft: 47, display: 'flex'  }}>\n                                    <InputLabel sx={{ fontSize: '18px', mt: '15px' }}>Role:&nbsp; </InputLabel>\n                                   \n                                    <FormControl sx={{ display: 'flex', justifyContent: 'space-around', width: '25ch' }} error={eRoleError}>\n                                        <InputLabel >Select *</InputLabel>\n                                        <Select\n                                            labelId=\"demo-simple-select-error-label\"\n                                            id=\"demo-simple-select-error\"\n                                            defaultValue=\"\"\n                                            label=\"Select *\"\n                                            size=\"small\"\n                                            onOpen={() => {\n                                                if (aRole === \"\") {\n                                                    setERoleError(true)\n                                                    setERoleDesc(\"Please Select the Role\")\n                                                    // setActiveSave(false)\n                                                }\n                                            }}\n                                            onChange={(c:any) =>{handleERoll(c.target.value);handleSave()} }\n                                        >\n                                        {OemRoles.map((option: any) => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                                {option.label}\n                                            </MenuItem>\n                                        ))}\n                                         </Select>\n                                        <FormHelperText>{eRoleDesc}</FormHelperText>\n                                    </FormControl>\n                                </div>\n                                <div style={{ marginBottom: 40, marginLeft: 40, display: 'flex' }}>\n                                    <InputLabel sx={{ fontSize: '18px', mt: '15px'  }}>Cost Center:&nbsp; </InputLabel>\n                                    <FormControl sx={{ display: 'flex', justifyContent: 'space-around', width: '25ch' }} error={eCostError}>\n                                        <InputLabel  >Select *</InputLabel>\n                                        <Select\n                                            labelId=\"demo-simple-select-error-label\"\n                                            id=\"demo-simple-select-error\"\n                                            defaultValue=\"\"\n                                            label=\"Select *\"\n                                            size=\"small\"\n                                            onOpen={() => {\n                                                if (aCost === \"\") {\n                                                    setECostError(true)\n                                                    setECostDesc(\"Please Select the Cost Center\")\n                                                }\n                                            }}\n                                            onChange={(c:any) => {handleSave();handleECost(c.target.value)}}\n                                        >\n                                            {costCenterName.map((option: any) => (\n                                                <MenuItem key={option.value} value={option.value}>\n                                                    {option.label}\n                                                </MenuItem>\n                                            ))}\n                                        </Select>\n                                        <FormHelperText>{eCostDesc}</FormHelperText>\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\n                        <Button variant=\"contained\" style={{ marginBottom: \"30px\", marginRight: \"65px\" }} disabled={(eCostError || eRoleError || eMobileError||activeSave)} onClick={PostOemUser}>\n                            Save\n                        </Button>\n                        <Button variant=\"contained\" onClick={() => { handeOemClose(); setEMobileError(false) }} style={{ marginBottom: \"30px\" }}>\n                            Cancel\n                        </Button>\n                    </div>\n                </Box>\n            </Paper>\n        </div>\n    return (\n        oem ? addOEM : <div></div>\n    )\n}\n\nexport default AddForm;","import React, { useEffect } from 'react'\nimport { AccountCircle } from '@mui/icons-material'\nimport { Autocomplete, Box, Button, Divider, Fab, FormControl, FormHelperText, IconButton, InputAdornment, InputBase, InputLabel, MenuItem, Modal, Paper, Select, TextField, Typography } from '@mui/material'\nimport SearchIcon from '@mui/icons-material/Search';\nimport AddIcon from \"@mui/icons-material/Add\";\n\nimport {\n    GridRowsProp,\n    GridColumns,\n    DataGrid,\n} from '@mui/x-data-grid';\nimport axiosInstance from '../../../../config/axios.config';\nimport { environment } from '../../../../environments/environment';\nimport { useSnackAlert } from '../../../../hooks/useToasterAlert';\nimport { handleError } from '../../../utils/CommonFn';\nimport validator from 'validator';\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined';\nimport { Link, Navigate, NavigateFunction, useNavigate } from 'react-router-dom';\n\nexport type RouteParamsType = {\n    fromUser: boolean\n}\n\nconst AddClient = ({ roles, entity, UaddClient, getAppUsers }: any) => {\n    const [showClientUser, setshowClientUser] = React.useState(false);\n    const [clientsData, setClientsData] = React.useState<any>([])\n    const [contactsData, setContactsData] = React.useState<any>([])\n    const [clientId, setClientId] = React.useState('')\n    const [showTable, setShowTable] = React.useState(false)\n    const [AadUsersdata, setAadUsersdata] = React.useState<any>([])\n    const [value, setValue] = React.useState<string | null>('');\n    const [inputValue, setInputValue] = React.useState('');\n    const [contactName, setContactName] = React.useState(\"\")\n    const [aCMobile, setaCMobile] = React.useState(\"\")\n    const [aCRole, setaCRole] = React.useState(\"\")\n    const ref: any = React.useRef(null)\n    const [contactId, setContactId] = React.useState(\"\")\n    const snackBar = useSnackAlert()\n    const [eMobileError, setEMobileError] = React.useState<any>(false)\n    const [eMobileDesc, setEMobileDesc] = React.useState(\"\")\n    const [eRoleError, setERoleError] = React.useState<any>(false)\n    const [eRoleDesc, setERoleDesc] = React.useState(\"\")\n    const [eCostError, setECostError] = React.useState<any>(false)\n    const [loadState, setLoadState] = React.useState<any>(false)\n    const [clientDrop, setClientDrop] = React.useState<any>(true)\n    const [activeSave, setActiveSave] = React.useState<any>(true)\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    const [errorName, setErrorName] = React.useState<any>(false)\n    const [errorEmail, setErrorEmail] = React.useState<any>(false)\n    const [errorMobile, setErrorMobile] = React.useState<any>(false)\n    const [name, setName] = React.useState(\"\")\n    const [email, setEmail] = React.useState(\"\")\n    const [phone, setPhone] = React.useState(\"\")\n    const [contAdded, setcontAdded] = React.useState<any>(false)\n    const [fromUser, setFromUser] = React.useState<any>(true)\n    const navigate: NavigateFunction = useNavigate()\n\n\n    React.useEffect(\n        () => {\n            axiosInstance.get(`${environment.baseApiURL}clients/client/NameAndId`)\n                .then(\n                    (data:any) => {\n                        if (data.data.code === 200) {\n                            setClientsData(data.data.data)\n                        }\n                        else if (data.data.code === 204) {\n                            snackBar(\"warning\", data.data.message)\n                        }\n                    })\n                .catch((err:any) => {\n                    handleError(err)\n                });\n        }, []\n    )\n\n    const CLIENTDATA = clientsData.map((c: any) => { return { value: c.ClientGuID, label: c.ClientName } })\n\n\n\n    const getClientContacts = (clientID: any) => {\n\n        axiosInstance.get(`${environment.baseApiURL}clients/contacts/client/${clientID}`)\n            .then(\n                (data:any) => {\n                    if (data.data.code === 200) {\n                        setContactsData(data.data.data)\n\n                    }\n                    else if (data.data.code === 204) {\n                        snackBar(\"warning\", data.data.message)\n                    }\n                })\n\n            .catch((err:any) => {\n                handleError(err)\n            });\n\n        setShowTable(true)\n        setTimeout(() => {\n            ref.current?.scrollIntoView({ behaviour: \"Smooth\" })\n        }, 800);\n\n    }\n\n    useEffect(\n\n        () => {\n            if (clientId !== \"\") {\n                getClientContacts(clientId)\n            }\n        }, [contAdded]\n\n    )\n\n    const rows: GridRowsProp = [\n\n        ...contactsData.map((d: any) => {\n            return {\n                id: d.ContactGuID,\n                fullName: d.FullName,\n                email: d.UserPrincipleName,\n                mobile: d.Mobile,\n            }\n        })\n\n    ];\n\n    const columns: GridColumns = [\n        { field: 'fullName', headerName: 'Full Name', width: 260 },\n        { field: 'email', headerName: 'Email', width: 285 },\n        { field: 'mobile', headerName: 'Mobile', width: 210 },\n        {\n            field: 'actions',\n            type: 'actions',\n            headerName: 'Actions',\n            width: 210,\n            cellClassName: 'actions',\n            getActions: ({ id }: any) => {\n\n                return [\n                    <Button onClick={() => {\n                        setshowClientUser(true); setTimeout(() => {\n                            ref.current?.scrollIntoView({ behaviour: \"Smooth\" })\n                        }, 500); GetContactId(id)\n                    }}>Select</Button>\n\n                ]\n            },\n        },\n    ];\n\n    const navigateClient=(p:string)=>{ \n            navigate(\"/management/client\",{state:p}) \n    }\n\n    const handleName = (name: string) => {\n        name == \"\" ? setErrorName(true) : setErrorName(false)\n        setName(name)\n    }\n\n\n    const handleEmail = (email: string) => {\n        const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n        if (!email || email == '') {\n            setErrorEmail(true)\n        } else if (!regex.test(email)) {\n            setErrorEmail(true)\n        } else {\n            setErrorEmail(false)\n        }\n        setEmail(email)\n    }\n\n    const handleMobile = (mobile: string) => {\n        const mobileRegex = /^[0]?[789]\\d{9}$/\n        if (!mobile) {\n            setErrorMobile(true)\n        } else if (!mobileRegex.test(mobile)) {\n            setErrorMobile(true)\n        } else {\n            setErrorMobile(false)\n        }\n        setPhone(mobile)\n    }\n\n    const saveHandler = () => {\n        if (!name || name == \"\") {\n            setErrorName(true)\n            handleOpen()\n        }\n        else if (email == \"\" || !email) {\n            setErrorEmail(true)\n            handleOpen()\n        }\n        else if (phone == \"\" || !phone) {\n            setErrorMobile(true)\n            handleOpen()\n        }\n        else {\n           setErrorName(false);\n            setErrorEmail(false);\n            setErrorMobile(false);\n\n            setName('');\n            setEmail('');\n            setPhone('')\n        }\n    };\n\n    const sendContacts = (e: any) => {\n        e.preventDefault()\n        const postData = {\n            \"UserPrincipleName\": email,\n            \"FullName\": name,\n            'Mobile': phone,\n        }\n\n        axiosInstance.post(`${environment.baseApiURL}clients/contacts/${clientId}`, postData)\n            .then(\n                (result:any) => {\n\n                    if (result.data.code === 200) {\n                        snackBar(\"success\", result.data.message)\n                        setcontAdded(true)\n                        return result.data\n                    }\n                    else if (result.data.code === 204) {\n                        snackBar(\"warning\", result.data.message)\n                    }\n                }\n            )\n            .catch(\n                (err:any) => { handleError(err) }\n            )\n        handleClose()\n    }\n\n    const AADUsers = (val: any) => {\n        if (val.length > 1) {\n            setLoadState(true)\n            const searchdata = { 'search': val }\n            axiosInstance\n                .post(`${environment.baseApiURL}appuser/search`, searchdata)\n                .then(\n                    (result:any) => {\n                        if (result.data.code === 200) {\n                            setAadUsersdata(result.data[0])\n                            setLoadState(false)\n                        }\n                        else if (result.data.code === 204) {\n                            snackBar(\"warning\", result.data.message)\n                        }\n                    }\n                )\n                .catch((err:any) => {\n                    handleError(err)\n                })\n        }\n    }\n\n    const GetContactId = (id: any) => {\n        setContactId(id)\n    }\n\n    const AADUsersData = AadUsersdata.map((user: any) => { return { value: user.id, label: user.userPrincipalName } })\n    const Roles = roles.filter((role: any) => { return (role.RoleName.toLowerCase().includes('client')) })\n    const ClientRoles = Roles.map((r: any) => { return { value: r.RoleID, label: r.RoleName } })\n\n\n    const GetContactName = (usr: any) => {\n        setContactName('')\n        AadUsersdata.filter((name: any) => {\n            if (name.id === usr.value) {\n                setContactName(name.displayName)\n            }\n        })\n    }\n\n    const PostClientUser = (e: any) => {\n        e.preventDefault()\n\n        const postData = {\n            \"UserPrincipleName\": AADUsersData[0].label,\n            \"FullName\": contactName,\n            \"UserEntity\": entity,\n            'RoleID': aCRole,\n            'Mobile': aCMobile,\n            \"ClientGuID\": clientId,\n            \"ContactGuID\": contactId,\n           \n        }\n\n        axiosInstance.post(`${environment.baseApiURL}appuser`, postData)\n            .then(\n                (result:any) => {\n\n                    if (result.data.code === 200) {\n                        snackBar(\"success\", result.data.message)\n                        return result.data\n                    }\n                    else if (result.data.code === 204) {\n                        snackBar(\"warning\", result.data.message)\n                    }\n                }\n            )\n            .catch(\n                (err:any) => { handleError(err) }\n            )\n        setshowClientUser(false)\n        UaddClient(true)\n        getAppUsers()\n    }\n\n    const HandleEMobile = (a: string) => {\n        if (!validator.isLength(a, { min: 10, max: 13 }) || !validator.isMobilePhone(a)) {\n            setEMobileError(true)\n            setEMobileDesc(\"Please Enter the valid Mobile Number\")\n        }\n        else {\n            setEMobileError(false)\n            setEMobileDesc(\"\")\n        }\n    }\n\n    const handleERoll = (r: any) => {\n        if (r > 0) {\n            setaCRole(r)\n            setERoleError(false)\n            setERoleDesc(\"\")\n        }\n    }\n\n    const handleSave = () => {\n        if (((eCostError || eRoleError || eMobileError) === true) || (value == \"\" || contactName == \"\" || aCRole == \"\" || aCMobile == \"\")) {\n            setActiveSave(true)\n        }\n        else {\n            setActiveSave(false)\n        }\n    }\n\n    useEffect(() => {\n        handleSave()\n    }, [value, aCRole, aCMobile, contactName])\n\n    const style = {\n        position: 'absolute' as 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 500,\n        bgcolor: 'background.paper',\n        boxShadow: 24,\n        p: 4,\n        padding: \"30px 75px 30px 75px\"\n    };\n\n    const addClientUser =\n        <div style={{ width: \"85%\", margin: '20px auto',paddingBottom:'30px' }}>\n            <Paper elevation={4} style={{ width: \"100%\", alignContent: \"center\", margin: '20px auto', paddingBottom: '20px' }}>\n                <Box\n                    component=\"form\"\n                    sx={{\n                        '& .MuiTextField-root': { m: 1, width: '22ch' },\n                    }}\n                    noValidate\n                    autoComplete=\"off\"\n                >\n                    <div style={{ padding: '2px 4px',  display: 'flex', justifyContent: 'center',  width: 'auto', height: '100px', margin: '20px auto' }}>\n                        <Paper\n                            component=\"form\"\n\n                            sx={{ p: '2px 4px', display: 'flex', width: 'auto', height: 'auto'  }}\n                        >\n                            <div style={{ display: 'flex', justifyContent: 'space-evenly' }}>\n                                <div>\n                                    <IconButton sx={{ p: '10px', margin: '20px auto' }} aria-label=\"menu\">\n                                        <AccountCircle />\n                                    </IconButton>\n                                </div>\n                                <div style={{ width: '250px' }}>\n                                    <Autocomplete\n                                        loading={loadState}\n                                        value={value}\n                                        defaultValue=\"\"\n                                        onChange={(newValue:any) => {\n                                            setValue(newValue); GetContactName(newValue); handleSave()\n                                        }}\n                                        inputValue={inputValue}\n                                        onInputChange={(newInputValue:any) => {\n                                            setInputValue(newInputValue); AADUsers(newInputValue)\n                                        }}\n                                        autoComplete\n                                        includeInputInList\n                                        options={AADUsersData}\n                                        isOptionEqualToValue={(option:any, value:any) => option.valueOf === value.valueOf}\n                                        renderInput={(params:any) => <TextField sx={{ width: '250px' }} required\n                                            {...params} label=\"Search User\" variant='standard' id=\"standard-search\" />}\n                                    />\n                                </div>\n                                <div style={{ margin: '20px 0px 10px 10px' }}>\n                                    <IconButton type=\"button\"  /*aria-label=\"search\"*/>\n                                        <SearchIcon />\n                                    </IconButton>\n                                </div>\n\n                            </div>\n                        </Paper>\n                    </div>\n                    <br></br>\n                    <br></br>\n                    <div style={{ display: 'flex', justifyContent: 'space-evenly', flexWrap: \"wrap\" }}>\n                        <div style={{ display: 'flex' }}>\n                            <InputLabel sx={{ fontSize: '16px', mt: '15px' }}>Full Name:&nbsp; </InputLabel>\n                            <TextField\n                                required\n                                value={contactName}\n                                sx={{ width: '30px' }}\n                                id=\"outlined-required\"\n                                label=\"Name\"\n                                helperText=\"Enter the Full Name\"\n                                size=\"small\"\n                                onChange={handleSave}\n                            />\n                        </div>\n                        <div style={{ display: 'flex' }}>\n                            <InputLabel sx={{ fontSize: '16px', mt: '15px' }}>Mobile Number:&nbsp; </InputLabel>\n                            <TextField\n                                id=\"outlined-req\"\n                                label=\"Phone\"\n                                size=\"small\"\n                                defaultValue=\"\"\n                                onChange={(mob:any) => { HandleEMobile(mob.target.value); handleSave(); setaCMobile(mob.target.value) }}\n                                error={eMobileError}\n                                helperText={eMobileDesc}\n                            />\n                        </div>\n                    </div>\n                    <br></br>\n                    <br></br>\n                    <div style={{ display: 'flex', justifyContent: 'space-evenly', flexWrap: \"wrap\"  }}>\n                        <div style={{ marginBottom: 40, marginLeft: 47, display: 'flex'  }}>\n                            <InputLabel sx={{ fontSize: '16px', mt: '15px' }}>Role:&nbsp; </InputLabel>\n\n                            <FormControl sx={{ display: 'flex', justifyContent: 'space-around', width: '22ch' }} error={eRoleError}>\n                                <InputLabel id=\"demo-simple-select-error\" >Select *</InputLabel>\n                                <Select\n                                    labelId=\"demo-simple-select-error-label\"\n                                    id=\"demo-simple-select-error\"\n                                    defaultValue=\"\"\n                                    label=\"Select *\"\n                                    size=\"small\"\n                                    onOpen={() => {\n                                        if (aCRole === \"\") {\n                                            setERoleError(true)\n                                            setERoleDesc(\"Please Select the Role\")\n                                        }\n                                    }}\n                                    onChange={(c:any) => { handleERoll(c.target.value); handleSave() }}\n                                >\n                                    {ClientRoles.map((option: any) => (\n                                        <MenuItem key={option.value} value={option.value}>\n                                            {option.label}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                                <FormHelperText>{eRoleDesc}</FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\n                        <Button variant=\"contained\" style={{ marginBottom: \"30px\", marginRight: \"50px\" }} disabled={(eMobileError || eCostError || eRoleError || activeSave)} onClick={PostClientUser}>\n                            Save\n                        </Button>\n                        <Button variant=\"contained\" onClick={() => { setshowClientUser(false); setEMobileError(false); UaddClient(false) }} style={{ marginBottom: \"30px\" }}>\n                            Cancel\n                        </Button>\n                    </div>\n                </Box>\n            </Paper>\n        </div>\n\n\n    return (\n        <>\n            {clientDrop && <Paper elevation={3} sx={{ width: \"95%\", height: 'auto', alignContent: \"center\", margin: '2% auto'}}>\n                <Box\n                    component=\"form\"\n                    sx={{\n                        '& .MuiTextField-root': { m: 1, width: '25ch' },\n                        height: 'auto'\n                    }}\n                    noValidate\n                    autoComplete=\"off\"\n                >\n                    <div>\n\n                        <br></br>\n                        <div style={{ textAlign: 'center' }} >\n                            <div style={{ display: 'flex', justifyContent:'space-between' }}>\n                                <div style={{ display: 'flex', justifyContent: 'flex-start', margin: '3% 4%' }}>\n                                    <TextField\n                                        id=\"outlined-select-Cost-Center\"\n                                        select\n                                        defaultValue=\"\"\n                                        label=\"Select Client\"\n                                        size=\"small\"\n                                        helperText=\"Please select the Client\"\n                                        onChange={(e:any) => { setClientId(e.target.value); getClientContacts(e.target.value) }}\n                                    >\n                                        {CLIENTDATA.map((option: any) => (\n                                            <MenuItem key={option.value} value={option.value} >\n                                                {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                    <Button variant=\"contained\" startIcon={<AddIcon />} onClick={()=>navigateClient(fromUser)} style={{width:'40%',height:'45%',margin: '3%' }}  >\n                                        New Client\n                                    </Button>\n                                </div>\n                                <div >\n                                    <Button onClick={() => { setShowTable(false); setClientDrop(false) }} startIcon={<CloseOutlinedIcon fontSize=\"small\" />} >\n                                    </Button>\n                                </div>\n                            </div>\n                            <br></br>\n                            <div>\n                                {showTable &&\n                                    <>\n                                        <Fab\n                                            color=\"primary\"\n                                            aria-label=\"add\"\n                                            sx={{ position: 'relative', left: '40%' }}\n                                            onClick={handleOpen}\n                                        >\n                                            <AddIcon/>\n                                        </Fab>\n                                        <div ref={ref}>\n                                            <Box\n                                                sx={{\n                                                    height: 300,\n                                                    width: '85%',\n                                                    alignContent: 'center',\n                                                    margin: '3px auto 20px',\n                                                    paddingBottom: '25px',\n                                                    '& .actions': {\n                                                        color: 'text.secondary',\n                                                    },\n                                                    '& .textPrimary': {\n                                                        color: 'text.primary',\n                                                    },\n                                                }}\n                                            >\n                                                <DataGrid\n                                                    sx={{ alignContent: 'center' }}\n                                                    rows={rows}\n                                                    getRowHeight={() => 'auto'}\n                                                    columns={columns}\n                                                    editMode=\"row\"\n                                                />\n                                            </Box>\n                                        </div>\n                                    </>\n                                }\n                            </div>\n                            {showClientUser && <div ref={ref}>{addClientUser}</div>}\n                        </div>\n                    </div>\n                </Box>\n            </Paper>\n            }\n\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Box textAlign=\"center\">\n                        <Typography\n                            variant=\"h4\"\n                            mb={4}\n                            color=\"secondary\"\n                            textAlign=\"center\"\n                        >\n                            Add Contact\n                        </Typography>\n                        <Typography variant=\"h6\" component=\"span\">\n                            Name:&nbsp;\n                        </Typography>\n                        <TextField\n                            id=\"outlined-basic\"\n                            label=\"Name\"\n                            variant=\"outlined\"\n                            autoFocus\n                            required\n                            size='small'\n                            error={errorName}\n                            helperText={errorName ? \"Empty Field!\" : ''}\n                            onChange={(e:any) => {\n                                handleName(e.target.value)\n                            }}\n                        />\n                        <br />\n                        <br />\n                        <Typography variant=\"h6\" component=\"span\">\n                            Email:&nbsp;\n                        </Typography>\n                        <TextField\n                            id=\"outlined-basic\"\n                            label=\"Email\"\n                            variant=\"outlined\"\n                            required\n                            size='small'\n                            error={errorEmail}\n                            helperText={errorEmail ? \"Empty Field!\" : ''}\n                            onChange={(e:any) => {\n                                handleEmail(e.target.value)\n                            }}\n                        />\n                        <br />\n                        <br />\n                        <Typography variant=\"h6\" component=\"span\">\n                            Mobile:&nbsp;\n                        </Typography>\n                        <TextField\n                            id=\"outlined-basic\"\n                            label=\"Mobile\"\n                            variant=\"outlined\"\n                            required\n                            size='small'\n                            error={errorMobile}\n                            helperText={errorMobile ? \"Empty Field!\" : ''}\n                            onChange={(e:any) => {\n                                handleMobile(e.target.value)\n                            }}\n                        />\n                        <br />\n                        <Typography variant=\"h6\" component=\"p\" sx={{ color: 'red' }}>\n                        </Typography>\n                        <br />\n                        <Button\n                            variant=\"contained\"\n                            onClick={(e: any) => {\n                                sendContacts(e);\n                                handleClose();\n                            }}\n                            sx={{ margin: '6px' }}\n                        >\n                            Save\n                        </Button>\n                        <span>\n                            <Button variant=\"contained\" onClick={handleClose}>\n                                Cancel\n                            </Button>\n                        </span>\n                    </Box>\n                </Box>\n            </Modal>\n        </>\n    )\n}\n\nexport default AddClient;","import \"./UserManagement.css\";\r\nimport * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport Switch from '@mui/material/Switch';\r\nimport TuneSharpIcon from \"@mui/icons-material/TuneSharp\";\r\nimport LibraryAddIcon from \"@mui/icons-material/LibraryAdd\";\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport AddForm from \"./add-form/AddOEM\";\r\nimport AddClient from \"./add-form/AddClient\";\r\nimport axiosInstance from \"../../../config/axios.config\";\r\nimport { environment } from \"../../../environments/environment\";\r\nimport {  FormHelperText ,Select,  Typography } from '@mui/material'\r\nimport { FormControl, FormControlLabel, FormLabel, IconButton, InputLabel, MenuItem, Paper, Radio, RadioGroup, TextField, } from '@mui/material';\r\nimport {\r\n  GridRowsProp, GridRowModesModel,\r\n  GridToolbarContainer,\r\n  GridActionsCellItem,\r\n  GridRowId,\r\n  GridColumns,\r\n  DataGrid,\r\n  GridToolbarExport,\r\n} from '@mui/x-data-grid';\r\nimport { useSnackAlert } from \"../../../hooks/useToasterAlert\";\r\nimport { handleError } from \"../../utils/CommonFn\";\r\nimport validator from 'validator';\r\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined';\r\n\r\n\r\nconst UserManagement = () => {\r\n  const [rowModesModel, setRowModesModel] = React.useState<GridRowModesModel>({});\r\n  const [selectEntity, setSelectEntity] = React.useState(false);\r\n  const [oemForm, setOemForm] = React.useState(false);\r\n  const [clientForm, setClientForm] = React.useState(false);\r\n  const [userData, setUserData] = React.useState<any>([]);\r\n  const [oneUserData, setOneUserData] = React.useState<any>({});\r\n  const [costcenter, setCostCenter] = React.useState<any>([]);\r\n  const [roles, setRoles] = React.useState<any>([]);\r\n  const [searchBar, setSearchBar] = React.useState(false)\r\n  const [editForm, setEditForm] = React.useState(false)\r\n  const [eMobile, seteMobile] = React.useState(\"\")\r\n  const [eCostcenter, seteCostCenter] = React.useState(\"\")\r\n  const [eRoles, seteRoles] = React.useState(\"\")\r\n  const [updateStatus, setUpdateStatus] = React.useState<any>(false)\r\n  const [entity, setEntity] = React.useState(\"\")\r\n  const ref: any = React.useRef(null);\r\n  const [oemUpdateStatus, setOemUpdateStatus] = React.useState<any>(false)\r\n  const [clientUpdateStatus, setClientUpdateStatus] = React.useState<any>(false)\r\n  const [search, setSearch] = React.useState(\"\")\r\n  const [userDEntity, setUserDEntity] = React.useState<any>([])\r\n  const [clientDName, setClientDName] = React.useState<any>([])\r\n  const snackBar = useSnackAlert()\r\n  const [eMobileError, setEMobileError] = React.useState<any>(false)\r\n  const [eMobileDesc, setEMobileDesc] = React.useState(\"\")\r\n  const [eRoleError, setERoleError] = React.useState<any>(false)\r\n  const [eRoleDesc, setERoleDesc] = React.useState(\"\")\r\n  const [eCostError, setECostError] = React.useState<any>(false)\r\n  const [eCostDesc, setECostDesc] = React.useState(\"\")\r\n  const [activeSave, setActiveSave] = React.useState<any>(true)\r\n\r\n\r\n\r\n  const getAppUsers = () => {\r\n    axiosInstance.get(`${environment.baseApiURL}appuser`)\r\n      .then(\r\n        (data) => {\r\n          if (data.data.code === 200) {\r\n            setUserData(data.data.data)\r\n          }\r\n          else if (data.data.code === 204) {\r\n            snackBar(\"warning\", data.data.message)\r\n          }\r\n        }\r\n      )\r\n      .catch((err) => {\r\n        handleError(err)\r\n      });\r\n  }\r\n\r\n  React.useEffect(\r\n    () => {\r\n      getAppUsers()\r\n    }, [updateStatus, oemUpdateStatus, clientUpdateStatus, searchBar]\r\n  )\r\n\r\n  React.useEffect(\r\n    () => {\r\n\r\n      axiosInstance.get(`${environment.baseApiURL}costcenter`)\r\n        .then((data) => {\r\n          if (data.data.code === 200) {\r\n            setCostCenter(data.data.data)\r\n\r\n          }\r\n          else if (data.data.code === 204) {\r\n            snackBar(\"warning\", data.data.message)\r\n          }\r\n        }\r\n        )\r\n        .catch((err) => {\r\n          handleError(err)\r\n        });\r\n      axiosInstance.get(`${environment.baseApiURL}role`)\r\n        .then((data) => {\r\n\r\n          if (data.data.code === 200) {\r\n            setRoles(data.data.data)\r\n          }\r\n          else if (data.data.code === 204) {\r\n            snackBar(\"warning\", data.data.message)\r\n          }\r\n        }\r\n        )\r\n        .catch((err) => {\r\n          handleError(err)\r\n        });\r\n    }, [editForm, oemForm, clientForm]\r\n  )\r\n\r\n  const constCenterName = costcenter.map((cost: any) => { return { value: cost.CostCenterID, label: cost.CostCenterName } })\r\n  const Roles = roles.map((role: any) => { return { value: role.RoleID, label: role.RoleName } })\r\n\r\n  function EditToolbar(){\r\n    return (\r\n      <GridToolbarContainer>\r\n        <GridToolbarExport style={{ marginLeft: \"20px\" }} printOptions={{ disableToolbarButton: true }} />\r\n      </GridToolbarContainer>\r\n    );\r\n  }\r\n\r\n  const handleAddUser = () => {\r\n    setEditForm(false)\r\n    setSelectEntity(true)\r\n    setTimeout(() => {\r\n      ref.current?.scrollIntoView({ behaviour: \"Smooth\" })\r\n    }, 500);\r\n\r\n  };\r\n\r\n  const handelFilter = () => {\r\n    setSearchBar(true);\r\n\r\n    axiosInstance.get(`${environment.baseApiURL}usermaster`)\r\n      .then((data) => {\r\n\r\n        if (data.data.code === 200) {\r\n          setUserDEntity(data.data.data)\r\n        }\r\n        else if (data.data.code === 204) {\r\n          snackBar(\"warning\", data.data.message)\r\n        }\r\n      }\r\n      )\r\n      .catch((err) => {\r\n        handleError(err)\r\n      });\r\n    axiosInstance.get(`${environment.baseApiURL}clients/client/NameAndId`)\r\n      .then((data) => {\r\n\r\n        if (data.data.code === 200) {\r\n          setClientDName(data.data.data)\r\n        }\r\n        else if (data.data.code === 204) {\r\n          snackBar(\"warning\", data.data.message)\r\n        }\r\n      }\r\n      )\r\n      .catch((err) => {\r\n        handleError(err)\r\n      })\r\n  };\r\n\r\n  const dClientName = clientDName.map((c: any) => { return { value: c.ClientName, label: c.ClientName } })\r\n\r\n  const dUserEntity = userDEntity.map((e: any) => { return { value: e.UserEntity, label: e.UserEntity } })\r\n\r\n\r\n\r\n  const handelSearch = (searchKey: any, searchValue: any) => {\r\n    if (searchBar == true && searchValue.length > 0) {\r\n\r\n      axiosInstance.get(`${environment.baseApiURL}appuser?${searchKey}=${searchValue}`)\r\n        .then((data) => {\r\n          if (data.data.code === 200) {\r\n            setUserData(data.data.data)\r\n          }\r\n          else if (data.data.code === 204) {\r\n            snackBar(\"warning\", data.data.message)\r\n          }\r\n        }\r\n        )\r\n        .catch((err) => {\r\n          handleError(err)\r\n        });\r\n\r\n    }\r\n    else if (searchBar == false || searchValue.length == 0) {\r\n      getAppUsers()\r\n    }\r\n  }\r\n\r\n  const setForm = (value: any) => {\r\n    if (value === \"OEM\") {\r\n      setOemForm(true)\r\n    } else if (value === \"Client\") {\r\n      setOemForm(false)\r\n      setClientForm(true)\r\n    } else {\r\n      setClientForm(false)\r\n    }\r\n  }\r\n\r\n\r\n  const handleEditClick = (id: GridRowId) => () => {\r\n    setSelectEntity(false)\r\n    setOemForm(false)\r\n    setClientForm(false)\r\n    setEditForm(true)\r\n    axiosInstance.get(`${environment.baseApiURL}appuser/${id}`)\r\n      .then((data) => {\r\n\r\n        if (data.data.code === 200) {\r\n          setOneUserData(data.data.data[0])\r\n        }\r\n        else if (data.data.code === 204) {\r\n          snackBar(\"warning\", data.data.message)\r\n        }\r\n      }\r\n      )\r\n      .catch((err) => {\r\n        handleError(err)\r\n      });\r\n\r\n\r\n    setTimeout(() => {\r\n      ref.current?.scrollIntoView({ behaviour: \"Smooth\" })\r\n    }, 500);\r\n  };\r\n\r\n\r\n  const handleEditSave = (id: string, e: any) => {\r\n    e.preventDefault()\r\n    let editeddata: any;\r\n    if (oneUserData.UserEntity === \"Client\") {\r\n      editeddata = {\r\n        'RoleID': eRoles,\r\n        'Mobile': eMobile,\r\n\r\n      }\r\n    } else {\r\n      editeddata = {\r\n        'RoleID': eRoles,\r\n        'CostCenterID': eCostcenter,\r\n        'Mobile': eMobile,\r\n\r\n      }\r\n    }\r\n    setEditForm(false)\r\n    axiosInstance\r\n      .patch(`${environment.baseApiURL}appuser/${id}`, editeddata)\r\n      .then(\r\n        (result) => {\r\n          if (result.data.code === 200) {\r\n            snackBar(\"success\", result.data.message)\r\n            setUpdateStatus(true)\r\n\r\n          }\r\n          else if (result.data.code === 204) {\r\n            snackBar(\"warning\", result.data.message)\r\n          }\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => { handleError(err) }\r\n      )\r\n    setUpdateStatus(false)\r\n  }\r\n\r\n  const handelEditClose = () => {\r\n    setEditForm(false)\r\n    setEMobileError(false)\r\n    setERoleError(false)\r\n    setECostError(false)\r\n    seteRoles(\"\")\r\n    seteCostCenter(\"\")\r\n    seteMobile(\"\")\r\n\r\n  }\r\n\r\n\r\n  const handleLoginStatus = (id: any, Logstatus: any) => {\r\n\r\n    const changestatus = Logstatus ? 1 : 0\r\n\r\n    const changedData = {\r\n      'IsLoginEnabled': changestatus\r\n    }\r\n\r\n    axiosInstance.patch(`${environment.baseApiURL}usermaster/${id}`, changedData)\r\n      .then(\r\n        (result) => {\r\n          if (result.data.code === 200) {\r\n            snackBar(\"success\", result.data.message)\r\n          }\r\n          else if (result.data.code === 204) {\r\n            snackBar(\"warning\", result.data.message)\r\n          }\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => { handleError(err) }\r\n      )\r\n  }\r\n\r\n\r\n\r\n  const rows: GridRowsProp = [\r\n    ...userData.filter((user: any) => user.FullName.toLowerCase().startsWith(search.toLowerCase())).map((d: any) => {\r\n      return {\r\n        id: d.UserGuID,\r\n        entity: d.UserEntity,\r\n        fullName: d.FullName,\r\n        email: d.UserPrincipleName,\r\n        clientName: d.ClientName,\r\n        role: d.RoleName,\r\n        login: d.IsLoginEnabled\r\n      }\r\n    })\r\n  ];\r\n\r\n  const UaddOem = (status: any) => {\r\n    setOemUpdateStatus(status)\r\n  }\r\n\r\n  const UaddClient = (status: any) => {\r\n    setClientUpdateStatus(status)\r\n    console.log(status);\r\n    console.log(clientUpdateStatus);\r\n  }\r\n\r\n  const HandleEMobile = (a: string) => {\r\n    if (!validator.isLength(a, { min: 10, max: 13 }) || !validator.isMobilePhone(a)) {\r\n      setEMobileError(true)\r\n      setEMobileDesc(\"Please Enter the valid Mobile Number\")\r\n    }\r\n    else {\r\n      setEMobileError(false)\r\n      setEMobileDesc(\"\")\r\n    }\r\n  }\r\n\r\n  const handleERoll = (r: any) => {\r\n    if (r > 0) {\r\n      setERoleError(false)\r\n      setERoleDesc(\"\")\r\n      if (oneUserData?.UserEntity === \"OEM\") {\r\n        setECostError(true)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleECost = (r: any) => {\r\n    if (r > 0) {\r\n      seteCostCenter(r);\r\n      setECostError(false)\r\n      setECostDesc(\"\")\r\n    }\r\n  }\r\n\r\n  const handleSave = () => {\r\n    if (((eCostError || eRoleError || eMobileError || eCostError) === true) || (eRoles == \"\" || eMobile == \"\")) {\r\n      setActiveSave(true)\r\n    }\r\n    else {\r\n      setActiveSave(false)\r\n    }\r\n  }\r\n  React.useEffect(() => {\r\n    handleSave()\r\n  }, [eCostcenter, eRoles, eMobile])\r\n\r\n\r\n\r\n  const columns: GridColumns = [\r\n\r\n    { field: 'entity', headerName: 'Entity', width: 120 },\r\n    { field: 'fullName', headerName: 'Full Name', width: 210 },\r\n    { field: 'email', headerName: 'Email', width: 255 },\r\n    { field: 'clientName', headerName: 'Client Name', width: 230 },\r\n    { field: 'role', headerName: 'Role', width: 120 },\r\n\r\n    {\r\n      field: 'actions',\r\n      type: 'actions',\r\n      headerName: 'Actions',\r\n      width: 200,\r\n      cellClassName: 'actions',\r\n      getActions: (params: any) => {\r\n\r\n\r\n        return [\r\n          <FormControlLabel\r\n            value=\"bottom\"\r\n            sx={{ paddingRight: '20px' }}\r\n            control={<Switch color=\"primary\" defaultChecked={params.row.login} onChange={(e) => handleLoginStatus(params.id, e.target.checked)} />}\r\n            label=\"Login\"\r\n            labelPlacement=\"bottom\"\r\n          />,\r\n\r\n          <GridActionsCellItem\r\n            icon={<EditIcon />}\r\n            label=\"Edit\"\r\n            className=\"textPrimary\"\r\n            onClick={handleEditClick(params.id)}\r\n            color=\"inherit\"\r\n          />,\r\n        ];\r\n      },\r\n    },\r\n  ];\r\n\r\n  const showEditForm =\r\n  <div style={{ width: \"95%\", margin: '30px auto' }}>\r\n    <Paper elevation={3} sx={{ width: \"100%\", alignContent: \"center\", margin: '20px auto' }}>\r\n      <Box\r\n        component=\"form\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n        }}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n      >\r\n        <div>\r\n          <div style={{ padding: '2px 4px', display: 'flex', justifyContent: 'center', width: 'auto', height: '100px', margin: '20px auto' }}>\r\n            <Paper\r\n\r\n              component=\"form\"\r\n              sx={{ p: '2px 40px', display: 'flex', width: 'auto', height: 'auto' }}\r\n            >\r\n              <div style={{ display: 'flex', justifyContent: 'space-evenly', flexWrap: \"wrap\" }}>\r\n                <InputLabel sx={{ fontSize: '18px', mt: '20px' }}>Email:&nbsp;</InputLabel>\r\n                <Typography variant=\"h6\" sx={{ mt: '17px' }} >{oneUserData?.UserPrincipleName}</Typography>\r\n              </div>\r\n            </Paper>\r\n          </div>\r\n          <br></br>\r\n          <br></br>\r\n          <div style={{ display: 'block', fontSize: '18px' }}>\r\n            <div style={{ display: 'flex', justifyContent: 'space-evenly', flexWrap: \"wrap\" }}>\r\n              <div style={{ display: 'flex' }}>\r\n                <InputLabel sx={{ fontSize: '18px', mt: '15px' }}>Full Name:&nbsp; </InputLabel>\r\n                <FormControl>\r\n                  <TextField\r\n                    id=\"outlined-read-only-input\"\r\n                    value={oneUserData?.FullName}\r\n                    size=\"small\"\r\n                  />\r\n                </FormControl>\r\n              </div>\r\n              <div style={{ display: 'flex' }}>\r\n                <InputLabel sx={{ fontSize: '18px', mt: '15px'  }}>Mobile Number:&nbsp; </InputLabel>\r\n                <FormControl>\r\n                  <TextField\r\n                    id=\"filled-multiline-static\"\r\n                    defaultValue={oneUserData?.Mobile}\r\n                    onChange={(mob) => { HandleEMobile(mob.target.value); handleSave(); seteMobile(mob.target.value) }}\r\n                    error={eMobileError}\r\n                    helperText={eMobileDesc}\r\n                    size=\"small\"\r\n\r\n                  />\r\n                </FormControl>\r\n              </div>\r\n            </div>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <div style={{ display: 'flex', justifyContent: 'space-evenly', flexWrap: \"wrap\" }}>\r\n              <div style={{ marginBottom: 40, marginLeft: 47, display: 'flex'  }}>\r\n                <InputLabel sx={{ fontSize: '18px', mt: '15px'  }}>Role:&nbsp; </InputLabel>\r\n                <FormControl sx={{ display: 'flex', justifyContent: 'space-around', width: '25ch' }} error={eRoleError}>\r\n                  <InputLabel id=\"demo-simple-select-error\" >Select *</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-error-label\"\r\n                    id=\"demo-simple-select-error\"\r\n                    defaultValue=\"\"\r\n                    label=\"Select *\"\r\n                    size=\"small\"\r\n                    onOpen={() => {\r\n                      if (eRoles === \"\") {\r\n                        setERoleError(true)\r\n                        setERoleDesc(\"Please Select the Role\")\r\n                      }\r\n                    }}\r\n\r\n                    onChange={(c) => { handleSave(); seteRoles(c.target.value); handleERoll(c.target.value) }}\r\n                  >\r\n                    <MenuItem disabled value=\"\">\r\n                      <em>{oneUserData.RoleName}</em>\r\n                    </MenuItem>\r\n                    {Roles.map((option: any) => (\r\n                      <MenuItem key={option.value} value={option.value + \"\"}>\r\n                        {option.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                  <FormHelperText>{eRoleDesc}</FormHelperText>\r\n                </FormControl>\r\n              </div>\r\n              <div >\r\n                {(() => {\r\n\r\n                  var divDesign;\r\n\r\n                  if (oneUserData?.UserEntity === \"OEM\") {\r\n                    divDesign = <div style={{ marginBottom: 40, marginLeft: 40, display: 'flex' }}>\r\n                      <InputLabel sx={{ fontSize: '18px', mt: '15px' }}>Cost Center:&nbsp; </InputLabel>\r\n\r\n                      <FormControl sx={{ display: 'flex', justifyContent: 'space-around', width: '25ch' }} error={eCostError}>\r\n                        <InputLabel id=\"demo-simple-select-error\" >Select *</InputLabel>\r\n                        <Select\r\n                          labelId=\"demo-simple-select-error-label\"\r\n                          id=\"demo-simple-select-error\"\r\n                          label=\"Select *\"\r\n                          size=\"small\"\r\n                          onOpen={() => {\r\n                            if (eCostcenter === \"\") {\r\n                              setECostError(true)\r\n                              setECostDesc(\"Please Select the Cost Center\")\r\n                            }\r\n                            else if (eCostcenter === \"0\") {\r\n                              setECostError(false)\r\n                              setECostDesc(\"\")\r\n                            }\r\n                          }}\r\n                          onClose={() => setActiveSave(false)}\r\n                          onChange={(c) => { handleSave(); handleECost(c.target.value) }}\r\n                        >\r\n                          <MenuItem disabled value=\"\">\r\n                            <em>{oneUserData.CostCenterName}</em>\r\n                          </MenuItem>\r\n                          {constCenterName.map((option: any) => (\r\n                            <MenuItem key={option.value + \"\"} value={option.value + \"\"}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                        <FormHelperText>{eCostDesc}</FormHelperText>\r\n                      </FormControl>\r\n                    </div>\r\n                    return divDesign\r\n                  }\r\n\r\n                })()}\r\n              </div>\r\n\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <br></br>\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n\r\n          <Button variant=\"contained\" style={{ marginBottom: \"50px\", marginRight: \"65px\" }} disabled={(eMobileError || eCostError || eRoleError || activeSave)} onClick={(e) => handleEditSave(oneUserData?.UserGuID.toLowerCase(), e)}>\r\n            Update\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={() => { handelEditClose() }} style={{ marginBottom: \"50px\" }}>\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </Box>\r\n    </Paper>\r\n  </div >\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"common-top\" style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <Button variant=\"contained\" startIcon={<LibraryAddIcon />} style={{ position: \"relative\", left: '30px' }} onClick={handleAddUser}>\r\n          Add User\r\n        </Button>\r\n        <Button variant=\"outlined\" onClick={handelFilter} startIcon={<TuneSharpIcon />} style={{ position: \"relative\", right: '30px' }}>\r\n          Filter\r\n        </Button>\r\n      </div>\r\n      {searchBar &&\r\n        <div >\r\n          <Paper elevation={3} sx={{ width: '95%', display: \"flex\", justifyContent: \"space-between\", margin: \"20px auto\" }} >\r\n\r\n            <div style={{ display: \"flex\", width: '50%' }}>\r\n\r\n              <IconButton type=\"button\" sx={{ p: '10px' }} aria-label=\"search\">\r\n                <SearchIcon />\r\n              </IconButton>\r\n              <TextField\r\n\r\n                className=\"drop\"\r\n                fullWidth\r\n\r\n                label=\"Search User by Full Name...\"\r\n                id=\"standard-basic\"\r\n                onChange={(e) => {\r\n                  handelSearch(\"fullName\", e.target.value);\r\n                }}\r\n              />\r\n\r\n\r\n\r\n            </div>\r\n            <Paper sx={{ width: '50%', display:'flex', justifyContent: \"space-evenly\" }}>\r\n\r\n              <div style={{ position: \"relative\", top: 10, left: 10 }} >\r\n                <TextField\r\n                  select\r\n                  className=\"drop\"\r\n                  sx={{ width: '130px' }}\r\n                  label=\"User Entity\"\r\n                  size=\"small\"\r\n                  onChange={(u: any) => { handelSearch(\"UserEntity\", u.target.value) }}\r\n                >\r\n                  {dUserEntity.map((option: any) => (\r\n                    <MenuItem key=\"UserEntity\" value={option.label + \"\"}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </div>\r\n              <div style={{ position: \"relative\", top: 10, left: 10 }}  >\r\n                <TextField\r\n                  select\r\n                  label=\"Client Name\"\r\n                  className=\"drop\"\r\n                  sx={{ width: '130px' }}\r\n                  size=\"small\"\r\n                  onChange={(c: any) => { handelSearch(\"ClientName\", c.target.value) }}\r\n                >\r\n                  {dClientName.map((option: any) => (\r\n                    <MenuItem key=\"ClientName\" value={option.label + \"\"}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </div>\r\n              <div style={{ position: \"relative\", top: 10, left: 10, right: 40 }}  >\r\n                <TextField\r\n                  select\r\n                  label=\"Role\"\r\n                  className=\"drop\"\r\n                  sx={{ width: '130px' }}\r\n                  size=\"small\"\r\n                  onChange={(r: any) => { handelSearch(\"RoleName\", r.target.value) }}\r\n                >\r\n                  {Roles.map((option: any) => (\r\n                    <MenuItem key=\"RoleName\" value={option.label + \"\"}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </div>\r\n\r\n              <div style={{ position: \"relative\", top: 15, left: 20, right: 60 }}>\r\n                <Button onClick={() => setSearchBar(false)} startIcon={<CloseOutlinedIcon fontSize=\"small\" />} /*style={{ width:'20px',padding:'5px 2px 5px 5px'}}*/>\r\n                </Button>\r\n              </div>\r\n            </Paper>\r\n          </Paper>\r\n        </div>\r\n      }\r\n      <Paper elevation={3} sx={{ width: \"95%\", height: \"400\", alignContent: \"center\", margin: '10px auto' }}>\r\n        <Box\r\n          sx={{\r\n            height: 500,\r\n            width: '100%',\r\n            alignContent: 'center',\r\n            '& .actions': {\r\n              color: 'text.secondary',\r\n            },\r\n            '& .textPrimary': {\r\n              color: 'text.primary',\r\n            },\r\n          }}\r\n        >\r\n\r\n          <DataGrid\r\n            rows={rows}\r\n            getRowHeight={() => 'auto'}\r\n            columns={columns}\r\n            editMode=\"row\"\r\n            rowModesModel={rowModesModel}\r\n            components={{\r\n              Toolbar: EditToolbar\r\n            }}\r\n          />\r\n        </Box>\r\n      </Paper>\r\n\r\n      {editForm && <div ref={ref}>{showEditForm} </div>}\r\n      <div style={{ width: '95%', position: \"relative\", top: 10, left: 30 }}>\r\n        {selectEntity &&\r\n          <Paper elevation={3} sx={{ width: \"100%\", height: \"40\", padding: '30px', display: 'flex', justifyContent: \"space-between\" }} >\r\n            <div>\r\n              <FormControl>\r\n                <RadioGroup\r\n                  row\r\n                  aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                  name=\"row-radio-buttons-group\"\r\n                  onChange={(e, val) => setForm(val)}\r\n                  sx={{ display: 'flex', justifyContent: 'flex-start', margin: '5px 10px' }}\r\n                >\r\n                  <div ref={ref} style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n                    <FormLabel id=\"demo-row-radio-buttons-group-label\" sx={{ margin: '10px 20px 10px 10px' }}>Select Entity:&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    </FormLabel>\r\n                    <FormControlLabel value=\"OEM\" control={<Radio onChange={(e) => {\r\n                      setEntity(e.target.value); setTimeout(() => {\r\n                        ref.current?.scrollIntoView({ behaviour: \"Smooth\" })\r\n                      }, 500)\r\n                    }} />} sx={{ marginRight: '30px' }} label=\"OEM\" />\r\n                    <FormControlLabel value=\"Client\" control={<Radio onChange={(e) => {\r\n                      setEntity(e.target.value); setTimeout(() => {\r\n                        ref.current?.scrollIntoView({ behaviour: \"Smooth\" })\r\n                      }, 500)\r\n                    }} />} label=\"Client\" />\r\n                  </div>\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </div>\r\n            <div style={{ position: 'relative', left: '30px', top: '0px' }}>\r\n              <Button onClick={() => setSelectEntity(false)} startIcon={<CloseOutlinedIcon fontSize=\"small\" />} /*style={{ width:'20px',padding:'5px 2px 5px 5px'}}*/>\r\n              </Button>\r\n            </div>\r\n          </Paper>\r\n\r\n        }\r\n      </div>\r\n      {oemForm ? <div ref={ref}>  <AddForm costcenters={costcenter} roles={roles} entity={entity} UaddOem={UaddOem} getAppUsers={getAppUsers} /></div> : clientForm ? <div ref={ref}><AddClient roles={roles} entity={entity} UaddClient={UaddClient} getAppUsers={getAppUsers} /></div> : <div></div>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserManagement;\r\n\r\n","import { useContext } from \"react\";\r\nimport { AppContext } from \"../context/AppContext\";\r\n\r\nexport const useSnackAlert = () => {\r\n  const { setToaster } = useContext(AppContext);\r\n\r\n  const showSnackbar = (\r\n    type: \"success\" | \"error\" | \"info\" | \"warning\",\r\n\r\n    text: string\r\n  ) => {\r\n    setToaster({\r\n      type,\r\n\r\n      text,\r\n    });\r\n  };\r\n\r\n  return showSnackbar;\r\n};\r\n"],"names":["costcenters","roles","entity","UaddOem","getAppUsers","React","AadUsersdata","setAadUsersdata","value","setValue","inputValue","setInputValue","disName","setDisName","aMobile","setaMobile","aCost","setaCost","aRole","setaRole","oem","setOEM","snackBar","useSnackAlert","eMobileError","setEMobileError","eMobileDesc","setEMobileDesc","eRoleError","setERoleError","eRoleDesc","setERoleDesc","eCostError","setECostError","eCostDesc","setECostDesc","loadState","setLoadState","activeSave","setActiveSave","AADUsersData","map","user","id","label","userPrincipalName","costCenterName","cost","CostCenterID","CostCenterName","OemRoles","filter","role","RoleName","toLowerCase","includes","r","RoleID","handleSave","useEffect","addOEM","style","width","margin","Paper","elevation","sx","alignContent","Box","component","m","noValidate","autoComplete","padding","display","justifyContent","p","height","IconButton","AccountCircle","Autocomplete","defaultValue","loading","onChange","newValue","usr","name","displayName","onInputChange","newInputValue","val","length","searchdata","axiosInstance","environment","then","result","data","code","message","catch","err","handleError","AADUsers","includeInputInList","options","isOptionEqualToValue","option","valueOf","renderInput","params","TextField","required","variant","type","Search","fontSize","flexWrap","InputLabel","mt","helperText","size","mob","a","target","validator","min","max","error","marginBottom","marginLeft","FormControl","Select","labelId","onOpen","c","MenuItem","FormHelperText","Button","marginRight","disabled","onClick","e","preventDefault","postData","UaddClient","showClientUser","setshowClientUser","clientsData","setClientsData","contactsData","setContactsData","clientId","setClientId","showTable","setShowTable","contactName","setContactName","aCMobile","setaCMobile","aCRole","setaCRole","ref","contactId","setContactId","clientDrop","setClientDrop","open","setOpen","handleOpen","handleClose","errorName","setErrorName","errorEmail","setErrorEmail","errorMobile","setErrorMobile","setName","email","setEmail","phone","setPhone","contAdded","setcontAdded","fromUser","navigate","useNavigate","CLIENTDATA","ClientGuID","ClientName","getClientContacts","clientID","setTimeout","current","scrollIntoView","behaviour","rows","d","ContactGuID","fullName","FullName","UserPrincipleName","mobile","Mobile","columns","field","headerName","cellClassName","getActions","GetContactId","ClientRoles","addClientUser","paddingBottom","textAlign","select","startIcon","Add","state","CloseOutlined","Fab","color","position","left","DataGrid","getRowHeight","editMode","Modal","onClose","top","transform","bgcolor","boxShadow","Typography","mb","autoFocus","handleName","test","handleEmail","sendContacts","rowModesModel","selectEntity","setSelectEntity","oemForm","setOemForm","clientForm","setClientForm","userData","setUserData","oneUserData","setOneUserData","costcenter","setCostCenter","setRoles","searchBar","setSearchBar","editForm","setEditForm","eMobile","seteMobile","eCostcenter","seteCostCenter","eRoles","seteRoles","updateStatus","setUpdateStatus","setEntity","oemUpdateStatus","setOemUpdateStatus","clientUpdateStatus","setClientUpdateStatus","search","userDEntity","setUserDEntity","clientDName","setClientDName","constCenterName","Roles","dClientName","dUserEntity","UserEntity","handelSearch","searchKey","searchValue","startsWith","UserGuID","clientName","login","IsLoginEnabled","FormControlLabel","paddingRight","control","Switch","defaultChecked","row","Logstatus","changedData","handleLoginStatus","checked","labelPlacement","GridActionsCellItem","icon","Edit","className","showEditForm","editeddata","handleEditSave","LibraryAdd","TuneSharp","right","fullWidth","u","components","Toolbar","GridToolbarContainer","GridToolbarExport","printOptions","disableToolbarButton","RadioGroup","FormLabel","Radio","status","console","log","setToaster","useContext","AppContext","text"],"sourceRoot":""}